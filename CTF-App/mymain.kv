#:kivy 2.0.0
#:import NoTransition kivy.uix.screenmanager.NoTransition
#:import CardTransition kivy.uix.screenmanager.CardTransition
#:import WipeTransition kivy.uix.screenmanager.WipeTransition
#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import SwapTransition kivy.uix.screenmanager.SwapTransition
#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import FallOutTransition kivy.uix.screenmanager.FallOutTransition
#:import RiseInTransition kivy.uix.screenmanager.RiseInTransition
#:import hex kivy.utils.get_color_from_hex


WindowManager:
    transition: CardTransition()
    Home:
    # Setting:
    Info:
    GameMode:
    Quiz:
    RapidFire:
    Facts:
    QuizResult:
    RapidResult:

#homescreen
<Home>:
    name: "home"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}
        
        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/MainScreen.png"
        
        FloatLayout:
            size: self.size
            pos: self.pos

            # Label:
            #     # markup: True
            #     # text: '\n'.join(("               [font=fonts/russoone.ttf][b]CTF[/b][/font]","[i][b]Cosmos Trivia[/b][/i]","          [size=80][i]and[/size] [b]Facts[/i][/b]"))
            #     # font_size: "50sp"
            #     size_hint: 1, .2
            #     # size: self.texture_size
            #     color: hex("#E7005E")
            #     pos_hint: {"center_x":.5, "top": .95}


            Image:
                source: "images/CTFLogo.png"
                keep_ratio: True
                pos_hint: {'center_x':.5, 'center_y': .8}
                size_hint: self.height, None
                height: "300dp"
                # width: self.height

            Button:
                markup: True
                text: "[i][font=fonts/righteous.ttf][u]PLAY[/u][/font][/i]"
                font_size: "60sp"
                color: hex("#5dfc00")
                pos_hint: {"center_x":.5, "center_y": .45}
                size_hint: None, None
                size: "200dp", "100dp"
                # size_hint: None, None
                # size: "175dp","75dp"
                background_color: 0,0,0,0

                canvas.before:
                    Color:
                        rgba: hex("#5dfc00")
                    Line:
                        width: 2
                        rectangle: self.x, self.y, self.width, dp(85)

                on_state:
                    self.opacity = .7 if self.state == "down" else 1
                
                on_release:
                    self.opacity = 1
                    app.root.current = "gamemode"

                # Image:
                #     id: hometoplay
                #     source: "images/buttons/optiondark.png"
                #     center_x: self.parent.center_x
                #     center_y: self.parent.center_y
                #     size: self.parent.size
                #     opacity: 0.5 if self.parent.disabled == True else 1
                    
            
            # Button:
            #     text: "Settings"
            #     pos_hint: {"center_x":.5, "top": .52}
            #     size_hint: None, None
            #     size: "175dp","75dp"
            #     background_color: 0,0,0,0

            #     on_release:
            #         app.root.current = "setting"

            # canvas:
            #     Rectangle:
            #         size_hint: 1, .1
            #         pos_hint: {"center_x":.5, "top":.1}
            #         color: hex("#181818")

            Button:
                id: btnhometoinfo
                pos_hint: {"center_x":.75, "top": .1}
                size_hint: None, (.075)
                width: self.height
                background_color: 0,0,0,0

                on_state:
                    hometoinfo.opacity = .7 if self.state == "down" else 1

                on_release:
                    hometoinfo.opacity = 1
                    app.root.current = "info"

                Image:
                    id: hometoinfo
                    source: "images/buttons/infobutton.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1
            
            Button:
                pos_hint: {"center_x":.25, "top": .1}
                size_hint: None, .075
                width: self.height
                background_color: 0,0,0,0

                on_state:
                    hometoexit.opacity = .7 if self.state == "down" else 1

                on_release:
                    hometoexit.opacity = 1
                    app.stop()

                Image:
                    id: hometoexit
                    source: "images/buttons/exitbutton.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

#settingscreen
# <Setting>:
#     name: "setting"

#     canvas.before:
#         Rectangle:
#             size: self.size
#             pos: self.pos
#             source: "images/screens/SettingsCTF.png"

#     BoxLayout:
#         orientation: "vertical"
#         size_hint: 1,1
        
#         FloatLayout:
#             size_hint: 1,.8
            
#         FloatLayout:
#             pos_hint: {"right":1, "top":.2}
#             size_hint: None,.2
#             width: self.height

#             Button:
#                 size_hint: None, None
#                 pos_hint: {"center_x":.55, "center_y": .45}
#                 size_hint: None, None
#                 size: "60dp","60dp"
#                 background_color: 0,0,0,0

#                 on_release:
#                     app.root.current = "home"

#                 Image:
#                     id: imagesettingstohome
#                     source: "images/buttons/homebutton.png"
#                     center_x: self.parent.center_x
#                     center_y: self.parent.center_y
#                     size: self.parent.size
#                     opacity: 0.5 if self.parent.disabled == True else 1

#infoscreen
<Info>:
    name: "info"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}
            
        FloatLayout:
            orientation: "vertical"
            # size_hint: 1,1

            TabbedPanel:
                size: self.parent.size
                pos: self.parent.pos
                do_default_tab: False
                tab_width: self.parent.width/3.04
                tab_pos: "top_mid"
                background_image: "images/screens/InfoCTF.png"

                TabbedPanelItem:
                    text: "About"

                    BoxLayout:
                        orientation: "vertical"
                        size_hint: 1,1
                        
                        FloatLayout:
                            size_hint: 1,.8
                            pos_hint: {"top":1}
                            
                            WrappedLabel:
                                size: self.parent.size
                                text: root.aboutctfapp
                                valign: "top"
                                halign: "justify"
                                font_size: "22sp"
                                font_name: "fonts/ubuntu.ttf"
                                pos_hint: {"center_x":.5,"y":0}
                                padding_x: "25dp"   
                            
                        FloatLayout:
                            pos_hint: {"right":1, "top":.2}
                            size_hint: None,.2
                            width: self.height

                            Button:
                                size_hint: None, None
                                pos_hint: {"center_x":.55, "center_y": .45}
                                size_hint: None, None
                                size: "60dp","60dp"
                                background_color: 0,0,0,0

                                on_state:
                                    imageinfotohometab1.opacity = .7 if self.state == "down" else 1

                                on_release:
                                    app.root.current = "home"
                                    imageinfotohometab1.opacity = 1
                                    
                                Image:
                                    id: imageinfotohometab1
                                    source: "images/buttons/homebutton.png"
                                    center_x: self.parent.center_x
                                    center_y: self.parent.center_y
                                    size: self.parent.size
                                    opacity: 0.5 if self.parent.disabled == True else 1

                
                TabbedPanelItem:
                    text: "How To Play?"

                    BoxLayout:
                        orientation: "vertical"
                        size_hint: 1,1
                        
                        FloatLayout:
                            size_hint: 1,.8
                            WrappedLabel:
                                size: self.parent.size
                                text: root.howtoplayctfapp
                                valign: "top"
                                halign: "justify"
                                pos_hint: {"center_x":.5,"center_y":.4}
                                padding_x: "25dp"
                                font_size: "18sp"
                                font_name: "fonts/ubuntu.ttf"

                        FloatLayout:
                            pos_hint: {"right":1, "top":.2}
                            size_hint: None,.2
                            width: self.height

                            Button:
                                size_hint: None, None
                                pos_hint: {"center_x":.55, "center_y": .45}
                                size_hint: None, None
                                size: "60dp","60dp"
                                background_color: 0,0,0,0

                                on_state:
                                    imageinfotohometab2.opacity = .7 if self.state == "down" else 1

                                on_release:
                                    app.root.current = "home"
                                    imageinfotohometab2.opacity = 1

                                Image:
                                    id: imageinfotohometab2
                                    source: "images/buttons/homebutton.png"
                                    center_x: self.parent.center_x
                                    center_y: self.parent.center_y
                                    size: self.parent.size
                                    opacity: 0.5 if self.parent.disabled == True else 1

                        
                
                TabbedPanelItem:
                    text: "Developers"

                    BoxLayout:
                        orientation: "vertical"
                        size_hint: 1,1
                        
                        FloatLayout:
                            size_hint: 1,.8
                            
                            WrappedLabel:
                                size: self.parent.size
                                text: root.infos
                                valign: "top"
                                halign: "justify"
                                pos_hint: {"center_x":.5,"y":.2}
                                padding_x: "25dp"
                                font_size: "22sp"
                                font_name: "fonts/ubuntu.ttf"

                        FloatLayout:
                            pos_hint: {"right":1, "top":.2}
                            size_hint: None,.2
                            width: self.height

                            Button:
                                size_hint: None, None
                                pos_hint: {"center_x":.55, "center_y": .45}
                                size_hint: None, None
                                size: "60dp","60dp"
                                background_color: 0,0,0,0

                                on_state:
                                    imageinfotohometab3.opacity = .7 if self.state == "down" else 1

                                on_release:
                                    app.root.current = "home"
                                    imageinfotohometab3.opacity = 1

                                Image:
                                    id: imageinfotohometab3
                                    source: "images/buttons/homebutton.png"
                                    center_x: self.parent.center_x
                                    center_y: self.parent.center_y
                                    size: self.parent.size
                                    opacity: 0.5 if self.parent.disabled == True else 1

#gamemodescreen
<GameMode>:
    name: "gamemode"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}
        
        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/GameModeScreen.png"
            
            Color:
                rgba: hex("#434343")
            Line:
                points: (0, self.parent.height/2.25, self.parent.width, self.parent.height/2.25)
                width: 5
                

        FloatLayout:
            size: self.size
            pos: self.pos

            
            Label:
                markup: True
                text:
                    '\n'.join(("          [font=fonts/russoone.ttf][b][i]CHOOSE[/i][/b][/font]","[font=fonts/russoone.ttf][i][b]   A GAME MODE[/b][/i][/font]"," "," "," "," "," "," "," "," ","[size=22][font=fonts/russoone.ttf][i][b] SOME INTERESTING FACTS[/b][/i][/font][/size]","[size=22][font=fonts/russoone.ttf][i][b]           ABOUT SPACE[/b][/i][/font][/size]"))
                font_size: "35sp"
                size_hint: 1, 1
                color: hex("#E7005E")
                pos_hint: {"center_x":.5, "center_y":.6}
            
            Label:
                text: "More..."
                font_size: "40sp"
                font_name: "fonts/russoone.ttf"
                color: hex("#E7005E")
                size_hint: 1, .5
                pos_hint: {'center_x': .5, 'top': 38}

            Button:
                pos_hint: {"center_x":.5, "top":.72}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0

                on_state:
                    imagemodestoquiz.source = "images/buttons/trivialight.png" if self.state == "down" else "images/buttons/triviadark.png"
                
                on_release:
                    app.root.current = "quiz"

                Image:
                    id: imagemodestoquiz
                    source: "images/buttons/triviadark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

            Button:
                pos_hint: {"center_x":.5, "top":.6}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0
                
                on_state:
                    imagemodestorapidfire.source = "images/buttons/rapidfirelight.png" if self.state == "down" else "images/buttons/rapidfiredark.png"
                
                on_release:
                    app.root.current = "rapidfire"

                Image:
                    id: imagemodestorapidfire
                    source: "images/buttons/rapidfiredark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1
            
            Button:
                text: "Space Facts"
                pos_hint: {"center_x":.5, "top":.28}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0
                
                on_state:
                    imagemodestofacts.source = "images/buttons/spacefactmodelight.png" if self.state == "down" else "images/buttons/spacefactmodedark.png"
                
                on_release:
                    app.root.current = "facts"

                Image:
                    id: imagemodestofacts
                    source: "images/buttons/spacefactmodedark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

            FloatLayout:
                pos_hint: {"right":1, "top":.2}
                size_hint: None,.2
                width: self.height

                Button:
                    size_hint: None, None
                    pos_hint: {"center_x":.55, "center_y": .45}
                    size_hint: None, None
                    size: "60dp","60dp"
                    background_color: 0,0,0,0

                    on_press:
                        imagemodestohome.opacity=.7

                    on_release:
                        app.root.current = "home"
                        imagemodestohome.opacity=1

                    Image:
                        id: imagemodestohome
                        source: "images/buttons/homebutton.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

#quizscreen
<Quiz>:
    name: "quiz"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/Quiz_Rapid_CTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99
                
                Label:
                    text: "SPACE TRIVIA"
                    bold: True
                    font_name: "fonts/righteous.ttf"
                    color: hex("#007ad1")
                    font_size: "40sp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .974}
                
                Label:
                    markup: True
                    text: "[color=#b7ff00]Round:[/color] "+ root.roundnum +"     [color=#fcba03]Ques.:[/color] " + root.question_number + "/5     [color=#00a6ff]Score:[/color] " + str(root.Quiz_Score)
                    font_size: "20sp"
                    size_hint: 1,.1
                    pos_hint: {"center_x": .5, "top": .86}
                    
                WrappedLabel:
                    id: quizquestionlabel
                    text: root.question
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "22.5sp"
                    halign: 'left'
                    valign: 'top'
                    padding_x: 10
                    size_hint: .92, .1
                    pos_hint: {"center_x":.5, "top":.735}

                Button:
                    id: btnquizaudio
                    pos_hint: {"center_x":.9, "top":.64}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0

                    on_state:
                        imagequizspeaker.opacity = .7 if self.state == "down" else 1

                    on_release:
                        app.talk(root.talkquestion)
                        imagequizspeaker.opacity = 1
                    
                    Image:
                        id: imagequizspeaker
                        source: "images/buttons/speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                ToggleButton:
                    id: btnopt1
                    pos_hint: {"center_x":.5, "top":.5785}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    
                    on_state:
                        imageopt1.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputA(self)
                        imageopt1.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                    
                    Image:
                        id: imageopt1
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt1
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.5785}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt2
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "20sp"
                    pos_hint: {"center_x":.5, "top":.4955}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt2.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputB(self)
                        imageopt2.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt2
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt2
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4955}
                    valign: 'middle'
                    padding_x: 10

                ToggleButton:
                    id: btnopt3
                    pos_hint: {"center_x":.5, "top":.4122}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt3.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputC(self)
                        imageopt3.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt3
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt3
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4122}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt4
                    pos_hint: {"center_x":.5, "top":.3299}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt4.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputD(self)
                        imageopt4.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt4
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt4
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.3299}
                    valign: 'middle'
                    padding_x: 10

                WrappedLabel:
                    id: quizquescheck
                    text: root.quizcheck
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "22.5sp"
                    halign: "center"
                    size_hint: 1, .1
                    padding_x: "25dp"
                    pos_hint: {"center_x":.5, "top":.215}

                Button:
                    id: btnquizcheck
                    pos_hint: {"center_x":.5, "top": .0835}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    disabled: True

                    on_state:
                        imagequizcheck.source = "images/buttons/checkanslight.png" if self.state == "down" else "images/buttons/checkansdark.png"

                    on_release:
                        root.check_quiz_ans()
                        imagequizcheck.source = "images/buttons/checkansdark.png"

                    Image:
                        id: imagequizcheck
                        source: "images/buttons/checkansdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                
                FloatLayout:
                    Button:
                        id: btnquiztohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagequiztohome.source = "images/buttons/quitlight.png" if self.state == "down" else "images/buttons/quitdark.png"
                        
                        on_release:
                            app.root.current = "home"
                            root.exitquiz()
                            imageopt1.source = "images/buttons/optiondark.png"
                            imageopt2.source = "images/buttons/optiondark.png"
                            imageopt3.source = "images/buttons/optiondark.png"
                            imageopt4.source = "images/buttons/optiondark.png"
                            imagequiztohome.source = "images/buttons/quitdark.png"

                        Image:
                            id: imagequiztohome
                            source: "images/buttons/quitdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                FloatLayout:
                    Button:
                        id: btnquiznextques
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: True #disable it

                        on_state:
                            imagenextquiz.source = "images/buttons/nextqueslight.png" if self.state == "down" else "images/buttons/nextquesdark.png"
                        
                        on_release:
                            root.start_quiz_ques(self, btnquiztohome)
                            imageopt1.source = "images/buttons/optiondark.png"
                            imageopt2.source = "images/buttons/optiondark.png"
                            imageopt3.source = "images/buttons/optiondark.png"
                            imageopt4.source = "images/buttons/optiondark.png"
                            # imagenextquiz.source = "images/buttons/nextquesdark.png"
                            btnopt1.state = 'normal'
                            btnopt2.state = 'normal'
                            btnopt3.state = 'normal'
                            btnopt4.state = 'normal'
                        
                        Image:
                            id: imagenextquiz
                            source: "images/buttons/nextquesdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

#rapidfirescreen
<RapidFire>:
    name: "rapidfire"
    
    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/Quiz_Rapid_CTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99
                
                Label:
                    text: "RAPID FIRE"
                    bold: True
                    font_name: "fonts/righteous.ttf"
                    color: hex("#007ad1")
                    font_size: "40sp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .974}
                
                

                Label:
                    markup: True
                    text: "[color=#b7ff00]Round:[/color] "+ root.roundnum +"     [color=#fcba03]Ques.:[/color] " + root.question_number + "/5     [color=#00a6ff]Score:[/color] " + str(root.Rapid_Score)
                    font_size: "20sp"
                    size_hint: 1,.1
                    pos_hint: {"center_x": .5, "top": .85885}
                
                Label:
                    text: "Time: "
                    halign: 'left'
                    font_size: "30sp"
                    font_name: "fonts/ubuntu.ttf"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .435, "center_y": .055}

                Label:
                    id: counter
                    text: "10"
                    halign: 'center'
                    font_size: "35sp"
                    font_name: "fonts/digital.otf"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .585, "center_y": .055}
                    
                WrappedLabel:
                    id: rapidquestionlabel
                    text: root.question
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "22.5sp"
                    halign: 'left'
                    valign: 'top'
                    padding_x: 10
                    size_hint: .92, .1
                    pos_hint: {"center_x":.5, "top":.735}

                Button:
                    id: btnrapidaudio
                    pos_hint: {"center_x":.9, "top":.64}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0

                    on_state:
                        imagerapidspeaker.opacity = .7 if self.state == "down" else 1

                    on_release:
                        app.talk(root.talkquestion)
                        imagerapidspeaker.opacity = 1
                    
                    Image:
                        id: imagerapidspeaker
                        source: "images/buttons/speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                ToggleButton:
                    id: btnopt1
                    pos_hint: {"center_x":.5, "top":.5785}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    
                    on_state:
                        imageopt1.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputA(self)
                        root.check_rapid_ans()
                        # root.timercountdown.cancel()
                        btnopt1.disabled=True
                        btnopt2.disabled=True
                        btnopt3.disabled=True
                        btnopt4.disabled=True
                        imageopt1.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                    
                    Image:
                        id: imageopt1
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt1
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.5785}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt2
                    pos_hint: {"center_x":.5, "top":.4955}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt2.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputB(self)
                        root.check_rapid_ans()
                        # root.timercountdown.cancel()
                        btnopt1.disabled=True
                        btnopt2.disabled=True
                        btnopt3.disabled=True
                        btnopt4.disabled=True
                        imageopt2.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        
                    Image:
                        id: imageopt2
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt2
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4955}
                    valign: 'middle'
                    padding_x: 10

                ToggleButton:
                    id: btnopt3
                    pos_hint: {"center_x":.5, "top":.4122}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt3.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputC(self)
                        root.check_rapid_ans()
                        # root.timercountdown.cancel()
                        btnopt1.disabled=True
                        btnopt2.disabled=True
                        btnopt3.disabled=True
                        btnopt4.disabled=True
                        imageopt3.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        
                    Image:
                        id: imageopt3
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt3
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4122}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt4
                    pos_hint: {"center_x":.5, "top":.3299}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt4.source = "images/buttons/optionlight.png" if self.state == "down" else "images/buttons/optiondark.png"

                    on_release:
                        root.inputD(self)
                        root.check_rapid_ans()
                        # root.timercountdown.cancel()
                        btnopt1.disabled=True
                        btnopt2.disabled=True
                        btnopt3.disabled=True
                        btnopt4.disabled=True
                        imageopt4.source = "images/buttons/optionselect.png" if self.state == "down" else "images/buttons/optiondark.png"
                        
                    Image:
                        id: imageopt4
                        source: "images/buttons/optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                        allow_stretch: True
                        keep_ratio: False
                    
                Label:
                    text: root.opt4
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "18sp"
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.3299}
                    valign: 'middle'
                    padding_x: 10

                WrappedLabel:
                    id: rapidanscheck
                    text: root.rapidcheck
                    font_name: "fonts/ubuntu.ttf"
                    font_size: "22.5sp"
                    halign: "center"
                    size_hint: 1, .1
                    padding_x: "25dp"
                    pos_hint: {"center_x":.5, "top":.215}

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                
                FloatLayout:
                    Button:
                        id: btnrapidtohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagerapidtohome.source = "images/buttons/quitlight.png" if self.state == "down" else "images/buttons/quitdark.png"
                        
                        on_release:
                            app.root.current = "home"
                            root.exitrapid()
                            imageopt1.source = "images/buttons/optiondark.png"
                            imageopt2.source = "images/buttons/optiondark.png"
                            imageopt3.source = "images/buttons/optiondark.png"
                            imageopt4.source = "images/buttons/optiondark.png"
                            imagerapidtohome.source = "images/buttons/quitdark.png"

                        Image:
                            id: imagerapidtohome
                            source: "images/buttons/quitdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                FloatLayout:
                    Button:
                        id: btnrapidnextques
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: True #disable it

                        on_state:
                            imagenextrapid.source = "images/buttons/nextqueslight.png" if self.state == "down" else "images/buttons/nextquesdark.png"
                        
                        on_release:
                            root.start_rapid_ques(self, btnrapidtohome)
                            root.timer()
                            imageopt1.source = "images/buttons/optiondark.png"
                            imageopt2.source = "images/buttons/optiondark.png"
                            imageopt3.source = "images/buttons/optiondark.png"
                            imageopt4.source = "images/buttons/optiondark.png"
                            # imagenextrapid.source = "images/buttons/nextquesdark.png"
                            btnopt1.state = 'normal'
                            btnopt2.state = 'normal'
                            btnopt3.state = 'normal'
                            btnopt4.state = 'normal'

                        Image:
                            id: imagenextrapid
                            source: "images/buttons/nextquesdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
#factscreen
<Facts>:
    name: "facts"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/FactsCTF.png"

        GridLayout:
            cols: 1

            FloatLayout:
                size_hint: 1,1

                Label:
                    text: "SPACE FACTS"
                    font_name: "fonts/righteous.ttf"
                    color: hex("#007ad1")
                    font_size: "40sp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .984}

                Spinner:
                    id: chooseplanets
                    size_hint: .92,  .0625
                    text: 'Random Space Facts'
                    font_size: "20sp"
                    pos_hint: {'center_x': .5, 'center_y': .82}
                    values:
                        ('Random Space Facts','Sun', 'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune')
                    on_text: root.ChooseOption()

                Label:
                    text: root.diduno
                    halign: 'center'
                    valign: 'top'
                    padding_x: 10
                    font_size: "30sp"
                    pos_hint: {'center_x': .5, 'center_y':.755}
                    size_hint: 1, .1
                    color: hex("#ff7b00")

                WrappedLabel:
                    id: factlabel
                    text: root.fact
                    font_name: "fonts/ubuntu.ttf"
                    halign: 'justify'
                    valign: 'center'
                    font_size: "25sp"
                    padding_x: "25"
                    pos_hint: {'center_x': .5, 'center_y':.63}
                    size_hint: 1, .6
                
                Image:
                    source: root.factimage
                    keep_ratio: True
                    pos_hint: {'center_x':.5, 'center_y': .385}
                    size_hint: self.height, None
                    height: "225dp"

                Button:
                    id: btnfactaudio
                    pos_hint: {"center_x":.9, "top":.765}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0

                    on_state:
                        imagefactspeaker.opacity = .7 if self.state == "down" else 1

                    on_release:
                        app.talk("DID YOU KNOW??")
                        app.talk(root.fact)
                        imagefactspeaker.opacity = 1

                    Image:
                        id: imagefactspeaker
                        source: "images/buttons/speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                Button:
                    id: btnmorefact
                    size_hint: .92, .065
                    background_color: 0,0,0,1
                    pos_hint: {"center_x": .5, "y": .125}

                    on_state:
                        root.buttonmorefacts(self)
                        # imagemorefacts.source = "images/buttons/loadfactlight.png" if self.state == "down" else "images/buttons/loadfactdark.png"

                    on_release:
                        root.show_more_facts(self)
                        imagemorefacts.source = "images/buttons/onemorefactdark.png"

                    Image:
                        id: imagemorefacts
                        source: "images/buttons/loadfactdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                Button:
                    id: btnfacttohome
                    size_hint: .92, .065
                    background_color: 0,0,0,1
                    pos_hint: {"center_x": .5, "center_y": .09}

                    on_state:
                        imagefacttohome.source = "images/buttons/exitlight.png" if self.state == "down" else "images/buttons/exitdark.png"

                    on_release:
                        app.root.current = "home"
                        imagemorefacts.source = "images/buttons/loadfactdark.png"
                        imagefacttohome.source = "images/buttons/exitdark.png"

                    Image:
                        id: imagefacttohome
                        source: "images/buttons/exitdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

#quizresultscreen
<QuizResult>:
    name: "quizresult"
    
    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/ResultCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99

                Label:
                    text:
                        '\n'.join((" SPACE TRIVIA", "      RESULT"))
                    font_name: "fonts/righteous.ttf"
                    color: hex("#007ad1")
                    font_size: "40sp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .937}

                Label:
                    text: "WELL PLAYED!!"
                    font_size: "40sp"
                    font_name: "fonts/ubuntu.ttf"
                    color: hex("#aa00ff")
                    size_hint: .1, .1
                    pos_hint: {"center_x": .5, "center_y": .5}

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                FloatLayout:
                    Button:
                        id: btnquizresulttohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagequizresulttohome.source = "images/buttons/homelight.png" if self.state == "down" else "images/buttons/homedark.png"
                        
                        on_release:
                            app.root.current = "home"
                            imagequizresulttohome.source = "images/buttons/homedark.png"

                        Image:
                            id: imagequizresulttohome
                            source: "images/buttons/homedark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                FloatLayout:
                    Button:
                        id: btnquizplayagain
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: False

                        on_state:
                            imageagainquiz.source = "images/buttons/playagainlight.png" if self.state == "down" else "images/buttons/playagaindark.png"
                        
                        on_release:
                            app.root.current = "quiz"
                            imageagainquiz.source = "images/buttons/playagaindark.png"

                        Image:
                            id: imageagainquiz
                            source: "images/buttons/playagaindark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

#rapidresultscreen
<RapidResult>:
    name: "rapidresult"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        # size_hint: None, 1
        # width: app.windowwidth
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "images/screens/ResultCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99

                Label:
                    text:
                        '\n'.join((" RAPID FIRE", "    RESULT"))
                    font_name: "fonts/righteous.ttf"
                    color: hex("#007ad1")
                    font_size: "40sp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .937}

                Label:
                    text: "WELL PLAYED!!"
                    font_size: "40sp"
                    font_name: "fonts/ubuntu.ttf"
                    color: hex("#aa00ff")
                    size_hint: .1, .1
                    pos_hint: {"center_x": .5, "center_y": .5}
            
            GridLayout:
                cols:2
                size_hint: 1,.16
                
                FloatLayout:
                    Button:
                        id: btnrapidresulttohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False
                        
                        on_state:
                            imagerapidresulttohome.source = "images/buttons/homelight.png" if self.state == "down" else "images/buttons/homedark.png"
                        
                        on_release:
                            app.root.current = "home"
                            imagerapidresulttohome.source = "images/buttons/homedark.png"

                        Image:
                            id: imagerapidresulttohome
                            source: "images/buttons/homedark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

                FloatLayout:
                    Button:
                        id: btnrapidplayagain
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: False

                        on_state:
                            imageagainrapid.source = "images/buttons/playagainlight.png" if self.state == "down" else "images/buttons/playagaindark.png"
                        
                        on_release:
                            app.root.current = "rapidfire"
                            imageagainrapid.source = "images/buttons/playagaindark.png"

                        Image:
                            id: imageagainrapid
                            source: "images/buttons/playagaindark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1