#:kivy 2.0.0
#:import NoTransition kivy.uix.screenmanager.NoTransition
#:import CardTransition kivy.uix.screenmanager.CardTransition
#:import WipeTransition kivy.uix.screenmanager.WipeTransition
#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import SwapTransition kivy.uix.screenmanager.SwapTransition
#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import FallOutTransition kivy.uix.screenmanager.FallOutTransition
#:import RiseInTransition kivy.uix.screenmanager.RiseInTransition
#:import hex kivy.utils.get_color_from_hex


WindowManager:
    transition: NoTransition()
    Home:
    # Setting:
    Info:
    GameMode:
    Quiz:
    RapidFire:
    Facts:
    QuizResult:
    RapidResult:

<Home>:
    name: "home"

    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}
    
        FloatLayout:
            size: self.size
            pos: self.pos

            canvas.before:
                Rectangle:
                    pos: self.parent.pos
                    size: self.parent.size
                    source: "MainScreen.png"

            Label:
                text: "CTF"
                size_hint: 1, .2
                font_name: "righteous.ttf"
                font_size: "30dp"
                color: hex("#E7005E")
                pos_hint: {"center_x":.5, "top": .95}
            
            Label:
                text: "Cosmos Trivia and Facts"
                size_hint: 1, .2
                font_name: "righteous.ttf"
                font_size: "26dp"
                color: hex("#E7005E")
                pos_hint: {"center_x":.5, "top": .9}

            Button:
                markup: True
                text: "Play"
                font_name: "righteous.ttf"
                font_size: 50
                color: hex("#5dfc00")
                pos_hint: {"center_x":.5, "center_y": .5}
                size_hint: None, None
                size: 200,100
                # size_hint: None, None
                # size: "175dp","75dp"
                background_color: 0,0,0,0

                on_state:
                    self.opacity = .7 if self.state == "down" else 1
                
                on_release:
                    self.opacity = 1
                    app.root.current = "gamemode"

                # Image:
                #     id: hometoplay
                #     source: "optiondark.png"
                #     center_x: self.parent.center_x
                #     center_y: self.parent.center_y
                #     size: self.parent.size
                #     opacity: 0.5 if self.parent.disabled == True else 1
                    
            
            # Button:
            #     text: "Settings"
            #     pos_hint: {"center_x":.5, "top": .52}
            #     size_hint: None, None
            #     size: "175dp","75dp"
            #     background_color: 0,0,0,0

            #     on_release:
            #         app.root.current = "setting"

            # canvas:
            #     Rectangle:
            #         size_hint: 1, .1
            #         pos_hint: {"center_x":.5, "top":.1}
            #         color: hex("#181818")

            Button:
                id: btnhometoinfo
                pos_hint: {"center_x":.75, "top": .1}
                size_hint: None, (.075)
                width: self.height
                background_color: 0,0,0,0

                on_state:
                    hometoinfo.opacity = .7 if self.state == "down" else 1

                on_release:
                    hometoinfo.opacity = 1
                    app.root.current = "info"

                Image:
                    id: hometoinfo
                    source: "infobutton.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1
            
            Button:
                pos_hint: {"center_x":.25, "top": .1}
                size_hint: None, .075
                width: self.height
                background_color: 0,0,0,0

                on_state:
                    hometoexit.opacity = .7 if self.state == "down" else 1

                on_release:
                    hometoexit.opacity = 1
                    app.stop()

                Image:
                    id: hometoexit
                    source: "exitbutton.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

# <Setting>:
#     name: "setting"

#     canvas.before:
#         Rectangle:
#             size: self.size
#             pos: self.pos
#             source: "SettingsCTF.png"

#     BoxLayout:
#         orientation: "vertical"
#         size_hint: 1,1
        
#         FloatLayout:
#             size_hint: 1,.8
            
#         FloatLayout:
#             pos_hint: {"right":1, "top":.2}
#             size_hint: None,.2
#             width: self.height

#             Button:
#                 size_hint: None, None
#                 pos_hint: {"center_x":.55, "center_y": .45}
#                 size_hint: None, None
#                 size: "60dp","60dp"
#                 background_color: 0,0,0,0

#                 on_release:
#                     app.root.current = "home"

#                 Image:
#                     id: imagesettingstohome
#                     source: "homebutton.png"
#                     center_x: self.parent.center_x
#                     center_y: self.parent.center_y
#                     size: self.parent.size
#                     opacity: 0.5 if self.parent.disabled == True else 1

<Info>:
    name: "info"

    GridLayout:
        cols: 1
        size_hint: 1, 1
        size: int(app.windowwidth), int(app. windowheight)
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,1

                TabbedPanel:
                    size: self.size
                    pos: self.pos
                    do_default_tab: False
                    tab_width: self.parent.width/3.04
                    tab_pos: "top_mid"
                    background_image: "InfoCTF.png"

                    TabbedPanelItem:
                        text: "About"

                        BoxLayout:
                            orientation: "vertical"
                            size_hint: 1,1
                            
                            FloatLayout:
                                size_hint: 1,.8
                                
                            FloatLayout:
                                pos_hint: {"right":1, "top":.2}
                                size_hint: None,.2
                                width: self.height

                                Button:
                                    size_hint: None, None
                                    pos_hint: {"center_x":.55, "center_y": .45}
                                    size_hint: None, None
                                    size: "60dp","60dp"
                                    background_color: 0,0,0,0

                                    on_state:
                                        imageinfotohometab1.opacity = .7 if self.state == "down" else 1

                                    on_release:
                                        app.root.current = "home"
                                        imageinfotohometab1.opacity = 1
                                        
                                    Image:
                                        id: imageinfotohometab1
                                        source: "homebutton.png"
                                        center_x: self.parent.center_x
                                        center_y: self.parent.center_y
                                        size: self.parent.size
                                        opacity: 0.5 if self.parent.disabled == True else 1

                    
                    TabbedPanelItem:
                        text: "How To Play?"

                        BoxLayout:
                            orientation: "vertical"
                            size_hint: 1,1
                            
                            FloatLayout:
                                size_hint: 1,.8

                            FloatLayout:
                                pos_hint: {"right":1, "top":.2}
                                size_hint: None,.2
                                width: self.height

                                Button:
                                    size_hint: None, None
                                    pos_hint: {"center_x":.55, "center_y": .45}
                                    size_hint: None, None
                                    size: "60dp","60dp"
                                    background_color: 0,0,0,0

                                    on_state:
                                        imageinfotohometab2.opacity = .7 if self.state == "down" else 1

                                    on_release:
                                        app.root.current = "home"
                                        imageinfotohometab2.opacity = 1

                                    Image:
                                        id: imageinfotohometab2
                                        source: "homebutton.png"
                                        center_x: self.parent.center_x
                                        center_y: self.parent.center_y
                                        size: self.parent.size
                                        opacity: 0.5 if self.parent.disabled == True else 1

                            
                    
                    TabbedPanelItem:
                        text: "Developers"

                        BoxLayout:
                            orientation: "vertical"
                            size_hint: 1,1
                            
                            FloatLayout:
                                size_hint: 1,.8
                                WrappedLabel:
                                    size: self.parent.size
                                    text: root.infos
                                    pos_hint: {"center_x":.5,"center_y":.5}
                                    padding_x: 20

                            FloatLayout:
                                pos_hint: {"right":1, "top":.2}
                                size_hint: None,.2
                                width: self.height

                                Button:
                                    size_hint: None, None
                                    pos_hint: {"center_x":.55, "center_y": .45}
                                    size_hint: None, None
                                    size: "60dp","60dp"
                                    background_color: 0,0,0,0

                                    on_state:
                                        imageinfotohometab3.opacity = .7 if self.state == "down" else 1

                                    on_release:
                                        app.root.current = "home"
                                        imageinfotohometab3.opacity = 1

                                    Image:
                                        id: imageinfotohometab3
                                        source: "homebutton.png"
                                        center_x: self.parent.center_x
                                        center_y: self.parent.center_y
                                        size: self.parent.size
                                        opacity: 0.5 if self.parent.disabled == True else 1


<GameMode>:
    name: "gamemode"
    
    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}
    
        FloatLayout:
            size: self.size
            pos: self.pos

            canvas.before:
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "GameModeScreen.png"

            Label:
                text: "Choose a Game Mode"
                size_hint: 1, .2
                font_name: "righteous.ttf"
                font_size: "30dp"
                color: hex("#E7005E")
                pos_hint: {"center_x":.5, "top":.9}

            Button:
                text: "Space Quiz"
                pos_hint: {"center_x":.5, "top":.7}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0

                on_state:
                    imagemodestoquiz.source = "spacequizlight.png" if self.state == "down" else "spacequizdark.png"
                
                on_release:
                    app.root.current = "quiz"

                Image:
                    id: imagemodestoquiz
                    source: "spacequizdark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

            Button:
                text: "Rapid Fire"
                pos_hint: {"center_x":.5, "top":.55}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0
                
                on_state:
                    imagemodestorapidfire.source = "rapidfirelight.png" if self.state == "down" else "rapidfiredark.png"
                
                on_release:
                    app.root.current = "rapidfire"

                Image:
                    id: imagemodestorapidfire
                    source: "rapidfiredark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

            Button:
                text: "Space Facts"
                pos_hint: {"center_x":.5, "top":.4}
                size_hint: None, None
                size: "175dp","75dp"
                background_color: 0,0,0,0
                
                on_state:
                    imagemodestofacts.source = "spacefactmodelight.png" if self.state == "down" else "spacefactmodedark.png"
                
                on_release:
                    app.root.current = "facts"

                Image:
                    id: imagemodestofacts
                    source: "spacefactmodedark.png"
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
                    size: self.parent.size
                    opacity: 0.5 if self.parent.disabled == True else 1

            FloatLayout:
                pos_hint: {"right":1, "top":.2}
                size_hint: None,.2
                width: self.height

                Button:
                    size_hint: None, None
                    pos_hint: {"center_x":.55, "center_y": .45}
                    size_hint: None, None
                    size: "60dp","60dp"
                    background_color: 0,0,0,0

                    on_press:
                        imagemodestohome.opacity=.7

                    on_release:
                        app.root.current = "home"
                        imagemodestohome.opacity=1

                    Image:
                        id: imagemodestohome
                        source: "homebutton.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

<Quiz>:
    name: "quiz"
    
    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "QuizCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99
                
                Label:
                    text: "Space Quiz"
                    font_size: "40dp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .967}
                
                Label:
                    text: "Question " + root.question_number + " of 5              " + "Current Score: " + str(root.Quiz_Score)
                    size_hint: 1,.1
                    pos_hint: {"center_x": .5, "top": .85}
                    
                WrappedLabel:
                    id: quizquestionlabel
                    text: root.question
                    halign: 'left'
                    valign: 'top'
                    padding_x: 10
                    size_hint: .92, .1
                    pos_hint: {"center_x":.5, "top":.75}

                Button:
                    id: btnquizaudio
                    pos_hint: {"center_x":.9, "top":.64}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0

                    on_state:
                        imagequizspeaker.opacity = .7 if self.state == "down" else 1

                    on_release:
                        app.talk(root.talkquestion)
                        imagequizspeaker.opacity = 1
                    
                    Image:
                        id: imagequizspeaker
                        source: "speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                ToggleButton:
                    id: btnopt1
                    pos_hint: {"center_x":.5, "top":.5785}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    
                    on_state:
                        imageopt1.source = "optionlight.png" if self.state == "down" else "optiondark.png"

                    on_release:
                        root.inputA(self)
                        imageopt1.source = "optionselect.png" if self.state == "down" else "optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                    
                    Image:
                        id: imageopt1
                        source: "optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                    
                Label:
                    text: root.opt1
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.5785}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt2
                    pos_hint: {"center_x":.5, "top":.4955}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt2.source = "optionlight.png" if self.state == "down" else "optiondark.png"

                    on_release:
                        root.inputB(self)
                        imageopt2.source = "optionselect.png" if self.state == "down" else "optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt2
                        source: "optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                    
                Label:
                    text: root.opt2
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4955}
                    valign: 'middle'
                    padding_x: 10

                ToggleButton:
                    id: btnopt3
                    pos_hint: {"center_x":.5, "top":.4122}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt3.source = "optionlight.png" if self.state == "down" else "optiondark.png"

                    on_release:
                        root.inputC(self)
                        imageopt3.source = "optionselect.png" if self.state == "down" else "optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt3
                        source: "optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                    
                Label:
                    text: root.opt3
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.4122}
                    valign: 'middle'
                    padding_x: 10
                
                ToggleButton:
                    id: btnopt4
                    pos_hint: {"center_x":.5, "top":.3299}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0

                    on_state:
                        imageopt4.source = "optionlight.png" if self.state == "down" else "optiondark.png"

                    on_release:
                        root.inputD(self)
                        imageopt4.source = "optionselect.png" if self.state == "down" else "optiondark.png"
                        btnquizcheck.disabled = False if self.state == "down" else True
                        
                    Image:
                        id: imageopt4
                        source: "optiondark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                    
                Label:
                    text: root.opt4
                    text_size: self.size
                    size_hint: .92, .0723
                    pos_hint: {"center_x":.5, "top":.3299}
                    valign: 'middle'
                    padding_x: 10

                WrappedLabel:
                    id: quizquescheck
                    text: root.quizcheck
                    text_size: self.size
                    size_hint: .92, .1
                    padding_x: 20
                    pos_hint: {"center_x":.5, "top":.2235}

                Button:
                    id: btnquizcheck
                    pos_hint: {"center_x":.5, "top": .0835}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    disabled: True

                    on_state:
                        imagequizcheck.source = "checkanslight.png" if self.state == "down" else "checkansdark.png"

                    on_release:
                        root.check_quiz_ans()
                        imagequizcheck.source = "checkansdark.png"

                    Image:
                        id: imagequizcheck
                        source: "checkansdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                
                FloatLayout:
                    Button:
                        id: btnquiztohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagequiztohome.source = "quitlight.png" if self.state == "down" else "quitdark.png"
                        
                        on_release:
                            app.root.current = "home"
                            root.exitquiz()
                            imageopt1.source = "optiondark.png"
                            imageopt2.source = "optiondark.png"
                            imageopt3.source = "optiondark.png"
                            imageopt4.source = "optiondark.png"
                            imagequiztohome.source = "quitdark.png"

                        Image:
                            id: imagequiztohome
                            source: "quitdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                FloatLayout:
                    Button:
                        id: btnquiznextques
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: True #disable it

                        on_state:
                            imagenextquiz.source = "nextqueslight.png" if self.state == "down" else "nextquesdark.png"
                        
                        on_release:
                            root.start_quiz_ques(self, btnquiztohome)
                            imageopt1.source = "optiondark.png"
                            imageopt2.source = "optiondark.png"
                            imageopt3.source = "optiondark.png"
                            imageopt4.source = "optiondark.png"
                            # imagenextquiz.source = "nextquesdark.png"
                            btnopt1.state = 'normal'
                            btnopt2.state = 'normal'
                            btnopt3.state = 'normal'
                            btnopt4.state = 'normal'
                        
                        Image:
                            id: imagenextquiz
                            source: "nextquesdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

<RapidFire>:
    name: "rapidfire"
    
    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "RapidFireCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99

                Label:
                    text: "Rapid Fire"
                    font_size: "40dp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .967}

                Label:
                    text: "Question " + root.question_number + " of 5              " + "Current Score: " + str(root.Rapid_Score)
                    size_hint: 1,.1
                    pos_hint: {"center_x": .5, "top": .85}

                WrappedLabel:
                    id: rapidquestionlabel
                    text: root.question
                    halign: 'left'
                    valign: 'top'
                    padding_x: 10
                    size_hint: .92, .1
                    pos_hint: {"center_x":.5, "top":.75}

                Button:
                    id: btnrapidaudio
                    pos_hint: {"center_x":.9, "top":.64}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0
                    
                    on_state:
                        imagerapidspeaker.opacity = .7 if self.state == "down" else 1
                    
                    on_release:
                        app.talk(root.question)
                        imagerapidspeaker.opacity = 1
                    
                    Image:
                        id: imagerapidspeaker
                        source: "speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                
                TextInput:
                    id: inprapidans
                    text: "Enter Your Answer Here"
                    background_color: hex("#505050")
                    size_hint: .918,.322
                    pos_hint: {"center_x":.5, "center_y":.418}

                # Button:
                #     id: btnrapidmic
                #     pos_hint: {"center_x":.9, "top":.565}
                #     size_hint: None, None
                #     width: "25dp"
                #     height: "25dp"
                #     background_color: 0,0,0,0

                #     on_state:
                #         imagerapidmic.opacity = .7 if self.state == "down" else 1
                    
                #     on_release:
                #         imagerapidmic.opacity = 1

                #     #     listen()

                #     Image:
                #         id: imagerapidmic
                #         source: "micicon.png"
                #         center_x: self.parent.center_x
                #         center_y: self.parent.center_y
                #         size: self.parent.size
                #         opacity: 0.5 if self.parent.disabled == True else 1
                
                WrappedLabel:
                    id: rapidquescheck
                    text: root.rapidcheck
                    text_size: self.size
                    size_hint: .92, .1
                    padding_x: 20
                    pos_hint: {"center_x":.5, "top":.2235}

                Button:
                    id: btnrapidcheck
                    pos_hint: {"center_x":.5, "top": .0835}
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    disabled: False     #enable it everywhere

                    on_state:
                        imagerapidcheck.source = "checkanslight.png" if self.state == "down" else "checkansdark.png"

                    on_release:
                        root.check_rapid_ans(btnrapidnextques)
                        imagerapidcheck.source = "checkansdark.png"

                    Image:
                        id: imagerapidcheck
                        source: "checkansdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
                    
                # Label:
                #     id: finalrapidscore
                #     text: "This is visible, well :("
                #     font_size: 0

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                
                FloatLayout:
                    Button:
                        id: btnrapidtohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagerapidtohome.source = "quitlight.png" if self.state == "down" else "quitdark.png"
                        
                        on_release:
                            app.root.current = "home"
                            root.exitrapid()
                            imagerapidtohome.source = "quitdark.png"

                        Image:
                            id: imagerapidtohome
                            source: "quitdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                FloatLayout:
                    Button:
                        id: btnrapidnextques
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: True #disable it

                        on_state:
                            imagenextrapid.source = "nextqueslight.png" if self.state == "down" else "nextquesdark.png"
                        
                        on_release:
                            root.start_rapid_ques(self, btnrapidtohome)
                            imagenextrapid.source = "nextquesdark.png"

                        Image:
                            id: imagenextrapid
                            source: "nextquesdark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                

<Facts>:
    name: "facts"
    
    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "FactsCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99

                Label:
                    text: root.diduno
                    halign: 'left'
                    valign: 'top'
                    padding_x: 10
                    font_size: 30
                    pos_hint: {'center_x': .5, 'center_y':.75}
                    size_hint: 1, .4

                WrappedLabel:
                    id: factlabel
                    text: root.fact
                    halign: 'left'
                    valign: 'top'
                    padding_x: 20
                    font_size: 20
                    pos_hint: {'center_x': .5, 'center_y':.6}
                    size_hint: 1, .6
                
                Button:
                    id: btnfactaudio
                    pos_hint: {"center_x":.9, "top":.683}
                    size_hint: None, None
                    width: "25dp"
                    height: "25dp"
                    background_color: 0,0,0,0

                    on_state:
                        imagefactspeaker.opacity = .7 if self.state == "down" else 1
                    
                    on_release:
                        app.talk("DID YOU KNOW??")
                        app.talk(root.fact)
                        imagefactspeaker.opacity = 1
                    
                    Image:
                        id: imagefactspeaker
                        source: "speakericon.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

                Button:
                    id: btnmorefact
                    size_hint: .92, .0723
                    background_color: 0,0,0,0
                    pos_hint: {"center_x": .497, "y": 0}

                    on_state:
                        imagemorefacts.source = "loadfactlight.png" if self.state == "down" else "loadfactdark.png"
                    
                    on_release:
                        root.show_more_facts(self)
                        imagemorefacts.source = "onemorefactdark.png"

                    Image:
                        id: imagemorefacts
                        source: "loadfactdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1
            
            FloatLayout:
                size_hint: 1,.1476
                    
                Button:
                    id: btnfacttohome
                    size_hint: .92, .49
                    background_color: 0,0,0,0
                    pos_hint: {"center_x": .497, "center_y": .702}

                    on_state:
                        imagefacttohome.source = "exitlight.png" if self.state == "down" else "exitdark.png"

                    on_release:
                        app.root.current = "home"
                        imagefacttohome.source = "exitdark.png"

                    Image:
                        id: imagefacttohome
                        source: "exitdark.png"
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
                        size: self.parent.size
                        opacity: 0.5 if self.parent.disabled == True else 1

<QuizResult>:
    name: "quizresult"
    
    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "ResultCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99

                Label:
                    text:
                        '\n'.join(("Space Quiz", "   Result"))
                    font_size: "20dp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .977}

                Label:
                    text: "Well Played!"
                    size_hint: .1, .1
                    pos_hint: {"center_x": .5, "center_y": .5}

            GridLayout:
                cols:2
                size_hint: 1,.16
                
                FloatLayout:
                    Button:
                        id: btnquizresulttohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False

                        on_state:
                            imagequizresulttohome.source = "homelight.png" if self.state == "down" else "homedark.png"
                        
                        on_release:
                            app.root.current = "home"
                            imagequizresulttohome.source = "homedark.png"

                        Image:
                            id: imagequizresulttohome
                            source: "homedark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1
                
                FloatLayout:
                    Button:
                        id: btnquizplayagain
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: False

                        on_state:
                            imageagainquiz.source = "playagainlight.png" if self.state == "down" else "playagaindark.png"
                        
                        on_release:
                            app.root.current = "quiz"
                            imageagainquiz.source = "playagaindark.png"

                        Image:
                            id: imageagainquiz
                            source: "playagaindark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

<RapidResult>:
    name: "rapidresult"

    GridLayout:
        cols: 1
        size_hint: None, None
        size: int(app.windowwidth), int(app. windowheight)
        pos_hint: {"center_x": .5, "center_y": .5}

        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: "ResultCTF.png"
                
        GridLayout:
            cols: 1
            
            FloatLayout:
                orientation: "vertical"
                size_hint: 1,.99
                
                Label:
                    text:
                        '\n'.join(("Rapid Fire", "   Result"))
                    font_size: "20dp"
                    size_hint: 1, .1
                    pos_hint: {"center_x": .5, "top": .977}

                Label:
                    text: "Well Played!"
                    size_hint: .1, .1
                    pos_hint: {"center_x": .5, "center_y": .5}
            
            GridLayout:
                cols:2
                size_hint: 1,.16
                
                FloatLayout:
                    Button:
                        id: btnrapidresulttohome
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .53264}
                        disabled: False
                        
                        on_state:
                            imagerapidresulttohome.source = "homelight.png" if self.state == "down" else "homedark.png"
                        
                        on_release:
                            app.root.current = "home"
                            imagerapidresulttohome.source = "homedark.png"

                        Image:
                            id: imagerapidresulttohome
                            source: "homedark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1

                FloatLayout:
                    Button:
                        id: btnrapidplayagain
                        size_hint: None, None
                        size: "150.5dp", "45dp"
                        background_color: 0,0,0,0
                        pos_hint: {"top": .875, "center_x": .46564}
                        disabled: False

                        on_state:
                            imageagainrapid.source = "playagainlight.png" if self.state == "down" else "playagaindark.png"
                        
                        on_release:
                            app.root.current = "rapidfire"
                            imageagainrapid.source = "playagaindark.png"

                        Image:
                            id: imageagainrapid
                            source: "playagaindark.png"
                            center_x: self.parent.center_x
                            center_y: self.parent.center_y
                            size: self.parent.size
                            opacity: 0.5 if self.parent.disabled == True else 1